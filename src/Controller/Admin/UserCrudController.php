<?php

/**
 * Generated by ez:make:admin
 */

namespace App\Controller\Admin;

use App\Entity\User;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Field\ArrayField;
use EasyCorp\Bundle\EasyAdminBundle\Field\AvatarField;
use EasyCorp\Bundle\EasyAdminBundle\Field\IntegerField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;
use EasyCorp\Bundle\EasyAdminBundle\Field\UrlField;
use Survos\EzBundle\Controller\BaseCrudController;

final class UserCrudController extends BaseCrudController
{
    public static function getEntityFqcn(): string
    {
        return User::class;
    }

    protected function once(array $seen, string $name, $field): mixed
    {
        if (isset($seen[$name])) { return null; }
        $seen[$name] = true;
        return $field;
    }

    public function xxconfigureFields(string $pageName): iterable
    {
        $fields = [];
        $seen = [];

        // Visual priority order - most important first
        if ($f = $this->once($seen, 'thumbnailUrl', AvatarField::new('thumbnailUrl')->setHeight(36))) { $fields[] = $f; }

        if ($f = $this->once($seen, 'id',
            TextField::new('id')->formatValue(function ($value) {
                return sprintf('<a href="%s">%s</a>', $this->generateUrl('admin_custom_asset', ['id' => $value]), $value);
            })
        )) { $fields[] = $f; }

        if ($f = $this->once($seen, 'marking', TextField::new('marking'))) { $fields[] = $f; }
        if ($f = $this->once($seen, 'statusCode', IntegerField::new('statusCode'))) { $fields[] = $f; }
        if ($f = $this->once($seen, 'mime', TextField::new('mime'))) { $fields[] = $f; }
        if ($f = $this->once($seen, 'originalUrl', UrlField::new('originalUrl'))) { $fields[] = $f; }
        if ($f = $this->once($seen, 'resized', ArrayField::new('resized')->onlyOnDetail())) { $fields[] = $f; }
        if ($f = $this->once($seen, 'tempFilename', TextField::new('tempFilename')->onlyOnDetail())) { $fields[] = $f; }
        if ($f = $this->once($seen, 'resizedCount', ArrayField::new('resizedCount', '#resized'))) { $fields[] = $f; }
        if ($f = $this->once($seen, 'size', IntegerField::new('size')->setLabel('Size (bytes)'))) { $fields[] = $f; }

        // Fallback to BaseCrudController (EzService-driven) if nothing added here
        if (!$fields) { return parent::configureFields($pageName); }
        return array_values(array_filter($fields));
    }
}
